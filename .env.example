# Environment Variables Template
# ------------------------------
# Copy this file to .env and fill in the values for your local setup.
# Variables set in the environment will override values in this file.
# Pydantic settings in backend/app/core/config.py will load these.

# Application Settings
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Ollama Configuration
# Base URL of your Ollama instance
# - Use http://localhost:11434 if running the backend service *locally* (not in Docker)
#   and Ollama is also running locally.
# - Use http://host.docker.internal:11434 if running the backend service *in Docker*
#   and Ollama is running directly on your host machine (macOS/Linux).
# - Use http://ollama:11434 (or the service name you choose) if running the backend service *in Docker*
#   and Ollama is *also* running in Docker Compose with the service name 'ollama'.
OLLAMA_BASE_URL=http://host.docker.internal:11434

# Default model to use if not specified in the request
OLLAMA_DEFAULT_MODEL=deepseek-r1:14b
# Request timeout in seconds for Ollama calls
OLLAMA_REQUEST_TIMEOUT=60

# OpenAI API Key (Required for LLM features)
OPENAI_API_KEY=

# Redis Configuration (Used for caching, session management, etc.)
REDIS_HOST=redis
REDIS_PORT=6379
# REDIS_PASSWORD=your_redis_password # Uncomment and set if your Redis requires a password

# PostgreSQL Database Configuration (Used for persistent storage)
POSTGRES_DB=appdb
POSTGRES_USER=appuser
POSTGRES_PASSWORD=your_secure_postgres_password
# DATABASE_URL is typically constructed in the app/docker-compose, but you could define it fully here if preferred:
# DATABASE_URL=postgresql+asyncpg://appuser:your_secure_postgres_password@postgres:5432/appdb

# JWT Authentication Secrets (Required for user authentication)
JWT_SECRET_KEY=generate_a_strong_random_secret_key # Use 'openssl rand -hex 32' or similar
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30

# Application Settings (Optional)
# API_V1_STR=/api/v1