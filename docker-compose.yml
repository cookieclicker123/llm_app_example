version: '3.8'

services:
  backend:
    # Build the image using the Dockerfile in the ./backend directory
    build:
      context: .
      dockerfile: backend/Dockerfile
    # Map port 8000 on the host to port 8000 in the container
    ports:
      - "8000:8000"
    # Set environment variables from a .env file in the project root
    # Pydantic settings in config.py will automatically pick these up
    # Useful for overriding defaults or setting secrets without hardcoding
    env_file:
      - .env
    # Optional: Mount the backend code directory for live reloading during development
    # Note: Changes might require rebuilding the image if dependencies change
    # volumes:
    #  - ./backend:/app/backend 
    # depends_on will be added later when DB, Redis, etc. are defined
    # depends_on:
    #   - db
    #   - redis
    #   - ollama # If running Ollama in compose

  # Database service (PostgreSQL) - Uncomment and configure later
  # db:
  #   image: postgres:15
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data/
  #   environment:
  #     - POSTGRES_DB=appdb
  #     - POSTGRES_USER=user
  #     - POSTGRES_PASSWORD=password
  #   env_file:
  #     - .env # Could also load DB secrets from here

  # Cache service (Redis) - Uncomment and configure later
  # redis:
  #   image: redis:7

  # Ollama service - Uncomment and configure later if running via Compose
  # ollama:
  #   image: ollama/ollama
  #   ports:
  #     - "11434:11434"
  #   volumes:
  #     - ollama_data:/root/.ollama
  #   # GPU support (example)
  #   # deploy:
  #   #   resources:
  #   #     reservations:
  #   #       devices:
  #   #         - driver: nvidia
  #   #           count: 1
  #   #           capabilities: [gpu]

  # Monitoring services (Prometheus, Grafana) - Uncomment and configure later
  # prometheus:
  #   image: prom/prometheus
  #   volumes:
  #     - ./infra/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"

  # grafana:
  #   image: grafana/grafana
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - grafana_data:/var/lib/grafana

volumes:
  postgres_data:
  ollama_data:
  grafana_data:

# Network configuration (optional, but good practice) - Uncomment later
# networks:
#   app_network:
#     driver: bridge 